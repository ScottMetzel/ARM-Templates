{
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workbookDisplayName": {
            "type": "string",
            "defaultValue": "Defender for Servers P2 Costs and Savings",
            "metadata": {
                "description": "The friendly name for the workbook that is used in the Gallery or Saved List.  This name must be unique within a resource group."
            }
        },
        "workbookType": {
            "type": "string",
            "defaultValue": "workbook",
            "metadata": {
                "description": "The gallery that the workbook will been shown under. Supported values include workbook, tsg, etc. Usually, this is 'workbook'"
            }
        },
        "workbookSourceId": {
            "type": "string",
            "defaultValue": "Azure Monitor",
            "metadata": {
                "description": "The id of resource instance to which the workbook will be associated"
            }
        },
        "workbookId": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "The unique guid for this workbook instance"
            }
        }
    },
    "resources": [
        {
            "name": "[parameters('workbookId')]",
            "type": "microsoft.insights/workbooks",
            "location": "[resourceGroup().location]",
            "apiVersion": "2022-04-01",
            "dependsOn": [],
            "kind": "shared",
            "properties": {
                "displayName": "[parameters('workbookDisplayName')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"#### Use this workbook to estimate costs and savings for Defender for Servers Plan 2.\"},\"name\":\"text - 1\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"crossComponentResources\":[\"{LogAnalyticsWorkspace}\"],\"parameters\":[{\"id\":\"ccd5adcd-8d59-4cfe-99ec-98075de2e253\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"DefaultSubscription\",\"label\":\"Default Subscription - Hidden\",\"type\":1,\"description\":\"This parameter automatically selects a default Azure Subscription to use where one hasn't been selected. This helps prevent the workbook from producing an error on open.\",\"isRequired\":true,\"query\":\"where type =~ 'microsoft.operationalinsights/workspaces'\\r\\n| take 1\\r\\n| project subscriptionId\",\"crossComponentResources\":[\"value::selected\"],\"isHiddenWhenLocked\":true,\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},{\"id\":\"eba94504-7958-4376-b9aa-658ce39a30db\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"IncludeAllSources\",\"label\":\"Include All Sources?\",\"type\":10,\"description\":\"Setting this to \\\"Yes\\\" can include data sources beyond the Defender subscriptions listed.\",\"isRequired\":true,\"typeSettings\":{\"additionalResourceOptions\":[],\"showDefault\":false},\"jsonData\":\"[\\r\\n    { \\\"value\\\":\\\"false\\\", \\\"label\\\":\\\"No\\\" },\\r\\n    { \\\"value\\\":\\\"true\\\", \\\"label\\\":\\\"Yes\\\", \\\"selected\\\":true }\\r\\n]\"},{\"id\":\"1ca69445-60fc-4806-b43d-ac7e6aad630a\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"DefenderSubscription\",\"label\":\"Defender for Servers Subscription\",\"type\":6,\"description\":\"Select a Subscription containing servers running Defender for Servers.\",\"isRequired\":true,\"isGlobal\":true,\"multiSelect\":true,\"quote\":\"\\\"\",\"delimiter\":\",\",\"query\":\"summarize by subscriptionId\\r\\n| project value = strcat(\\\"/subscriptions/\\\", subscriptionId), label = subscriptionId, selected = iff(subscriptionId =~ '{DefaultSubscription}', true, false)\",\"crossComponentResources\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"\",\"showDefault\":false},\"defaultValue\":\"value::all\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"value\":[\"/subscriptions/225d8fd1-bd45-4959-8ccf-28a626893d92\"]},{\"id\":\"5303c9b4-4c91-45b0-b249-12e310863a4d\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"LogAnalyticsSubscription\",\"label\":\"Log Analytics Subscription\",\"type\":6,\"description\":\"Select the Azure Subscription containing the Log Analytics Workspace which is receiving security logs from Defender for Servers.\",\"isRequired\":true,\"query\":\"summarize by subscriptionId\\r\\n| project value = strcat(\\\"/subscriptions/\\\", subscriptionId), label = subscriptionId, selected = iff(subscriptionId =~ '{DefaultSubscription}', true, false)\",\"crossComponentResources\":[\"value::selected\"],\"typeSettings\":{\"additionalResourceOptions\":[],\"showDefault\":false},\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"value\":\"/subscriptions/225d8fd1-bd45-4959-8ccf-28a626893d92\"},{\"id\":\"e94aafa3-c5d9-4523-89f0-4e87aa754511\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"LogAnalyticsWorkspace\",\"label\":\"Log Analytics Workspace\",\"type\":5,\"isRequired\":true,\"query\":\"where type =~ 'microsoft.operationalinsights/workspaces'\\n| project id\",\"crossComponentResources\":[\"{LogAnalyticsSubscription}\"],\"typeSettings\":{\"resourceTypeFilter\":{\"microsoft.operationalinsights/workspaces\":true},\"additionalResourceOptions\":[],\"showDefault\":false},\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"value\":\"/subscriptions/225d8fd1-bd45-4959-8ccf-28a626893d92/resourceGroups/Prod-RG-SOC-01/providers/Microsoft.OperationalInsights/workspaces/Prod-LAW-SOC-01\"},{\"id\":\"c4b69c01-2263-4ada-8d9c-43433b739ff3\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"label\":\"Time Range\",\"type\":4,\"isGlobal\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"value\":{\"durationMs\":7776000000}},{\"id\":\"2de08575-8ea0-44f1-9565-2e92d396ff05\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"BillingMeterAmountPerGB\",\"label\":\"Log Analytics Billing Meter Amount per GB\",\"type\":1,\"description\":\"Please provide the cost per GB for your Log Analytics Workspace\",\"isRequired\":true,\"isGlobal\":true,\"query\":\"let defaultValue = 2.28;\\r\\nprint\\r\\ndefaultValue\",\"crossComponentResources\":[\"{LogAnalyticsWorkspace}\"],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"a13a7edc-22c1-4a16-82a1-8410e40f9989\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"HeartBeatCount\",\"label\":\"Heartbeat Count\",\"type\":1,\"isGlobal\":true,\"query\":\"Heartbeat\\r\\n| where OSType == 'Windows'\\r\\n| summarize DistinctComputers=count_distinct(Computer) by Computer\\r\\n| summarize HeadCount=sum(DistinctComputers)\\r\\n| project iff(HeadCount > 0,HeadCount,-1)\",\"crossComponentResources\":[\"{LogAnalyticsWorkspace}\"],\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"10086a89-de54-400c-a2ac-056158d51b5a\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"DailyAllowanceTotalMB\",\"label\":\"Daily Allowance Total in MB\",\"type\":1,\"isGlobal\":true,\"query\":\"let DailyAllowance = 500;\\r\\nlet zeroValue = 0;\\r\\nlet TotalMB = iff({HeartBeatCount} == -1,-1,{HeartBeatCount} * DailyAllowance);\\r\\nprint\\r\\nTotalMB\",\"crossComponentResources\":[\"{LogAnalyticsWorkspace}\"],\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"4f4accbb-c15b-405b-8649-0067bb3a9aba\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRangeInteger\",\"type\":1,\"description\":\"This parameter is the number of hours or days for the time range specified.\",\"isGlobal\":true,\"query\":\"let days = datetime_diff('day',{TimeRange:end},{TimeRange:start});\\r\\nlet hours = datetime_diff('hour',{TimeRange:end},{TimeRange:start});\\r\\nlet minutes = datetime_diff('minute',{TimeRange:end},{TimeRange:start});\\r\\nlet theInteger = iff(hours >= 24, days,iff(minutes >= 1440, hours, minutes));\\r\\nprint\\r\\ntheInteger\",\"crossComponentResources\":[\"{LogAnalyticsWorkspace}\"],\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"6f639425-4552-4daf-89c6-cad568814238\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"AllowanceOverTimeTotalMB\",\"type\":1,\"description\":\"This parameter represents the MDS P2 allowance over the time range specified.\",\"isGlobal\":true,\"query\":\"let days = datetime_diff('day',{TimeRange:end},{TimeRange:start});\\r\\nlet hours = datetime_diff('hour',{TimeRange:end},{TimeRange:start});\\r\\nlet minutes = datetime_diff('minute',{TimeRange:end},{TimeRange:start});\\r\\nlet TotalOverTimeMB = iff(hours >= 24,iff({DailyAllowanceTotalMB} == -1, -1, {DailyAllowanceTotalMB} * {TimeRangeInteger}),iff({DailyAllowanceTotalMB} == -1, -1, ({DailyAllowanceTotalMB} / 1440) * {TimeRangeInteger}));\\r\\n//let TotalOverTimeMB = iff(minutes>=1440,iff({DailyAllowanceTotalMB} == -1, -1, {DailyAllowanceTotalMB} * {TimeRangeInteger}),iff({DailyAllowanceTotalMB} == -1, -1, ({DailyAllowanceTotalMB} / 1440) * {TimeRangeInteger}));\\r\\nprint\\r\\nTotalOverTimeMB\",\"crossComponentResources\":[\"{LogAnalyticsWorkspace}\"],\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"above\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let DailyAllowance = 500;\\r\\nlet AllSourcesQuery = union withsource=['Table Name'] *\\r\\n| where _IsBillable == true\\r\\n| where ['Table Name'] in ('SecurityAlert','SecurityBaseline','SecurityBaselineSummary','SecurityDetection','SecurityEvent', 'WindowsFirewall', 'ProtectionStatus', 'MDCFileIntegrityMonitoringEvents')\\r\\n| extend resourceSubId = extract(@\\\"/subscriptions/(.*?)/\\\", 1,_ResourceId)\\r\\n| summarize BillableDataBytes = sum(_BilledSize) by ['Table Name']\\r\\n| summarize TotalBillableDataBytes = sum(BillableDataBytes)\\r\\n| extend DataIngestedInGBBeforeBenefit = TotalBillableDataBytes / 1024 / 1024 / 1024\\r\\n| extend BillableDataInMBBeforeBenefit = TotalBillableDataBytes / 1024 / 1024\\r\\n| extend AllowanceOverTimeTotalGB = {AllowanceOverTimeTotalMB} / 1024\\r\\n| extend BillableDataInGBAfterBenefit = iff((DataIngestedInGBBeforeBenefit - AllowanceOverTimeTotalGB) < 0, strcat(\\\"0\\\"), strcat(round((DataIngestedInGBBeforeBenefit - AllowanceOverTimeTotalGB),2)))\\r\\n| extend BillableDataInMBAfterBenefit = iff((BillableDataInMBBeforeBenefit - {AllowanceOverTimeTotalMB}) < 0, strcat(\\\"0\\\"), strcat(round((BillableDataInMBBeforeBenefit - {AllowanceOverTimeTotalMB}),2)))\\r\\n| extend DataIngestionCostWithoutP2 = DataIngestedInGBBeforeBenefit * {BillingMeterAmountPerGB}\\r\\n| extend DataIngestCostWithP2 = todecimal(todecimal(BillableDataInGBAfterBenefit) * {BillingMeterAmountPerGB})\\r\\n| order by TotalBillableDataBytes desc\\r\\n//| project ['Table Name'], ['Billable Data MB Before Benefit'] = round(BillableDataInMBBeforeBenefit,2), ['Billable Data MB After Benefit'] = BillableDataInMBAfterBenefit,['Ingestion Cost w/o P2'] = DataIngestionCostWithoutP2, ['Ingestion Cost w/ P2'] = DataIngestCostWithP2;\\r\\n| project ['Billable Data MB Before Benefit'] = round(BillableDataInMBBeforeBenefit,2), ['Billable Data MB After Benefit'] = BillableDataInMBAfterBenefit,['Ingestion Cost w/o P2'] = DataIngestionCostWithoutP2, ['Ingestion Cost w/ P2'] = DataIngestCostWithP2;\\r\\n\\r\\nlet NotAllSourcesQuery = union withsource=['Table Name'] *\\r\\n| where _IsBillable == true\\r\\n| where ['Table Name'] in ('SecurityAlert','SecurityBaseline','SecurityBaselineSummary','SecurityDetection','SecurityEvent', 'WindowsFirewall', 'ProtectionStatus', 'MDCFileIntegrityMonitoringEvents')\\r\\n| extend resourceSubId = extract(@\\\"/subscriptions/(.*?)/\\\", 1,_ResourceId)\\r\\n| where resourceSubId in ({DefenderSubscription:subId})\\r\\n| summarize BillableDataBytes = sum(_BilledSize) by ['Table Name']\\r\\n| summarize TotalBillableDataBytes = sum(BillableDataBytes)\\r\\n| extend DataIngestedInGBBeforeBenefit = TotalBillableDataBytes / 1024 / 1024 / 1024\\r\\n| extend BillableDataInMBBeforeBenefit = TotalBillableDataBytes / 1024 / 1024\\r\\n| extend AllowanceOverTimeTotalGB = {AllowanceOverTimeTotalMB} / 1024\\r\\n| extend BillableDataInGBAfterBenefit = iff((DataIngestedInGBBeforeBenefit - AllowanceOverTimeTotalGB) < 0, strcat(\\\"0\\\"), strcat(round((DataIngestedInGBBeforeBenefit - AllowanceOverTimeTotalGB),2)))\\r\\n| extend BillableDataInMBAfterBenefit = iff((BillableDataInMBBeforeBenefit - {AllowanceOverTimeTotalMB}) < 0, strcat(\\\"0\\\"), strcat(round((BillableDataInMBBeforeBenefit - {AllowanceOverTimeTotalMB}),2)))\\r\\n| extend DataIngestionCostWithoutP2 = DataIngestedInGBBeforeBenefit * {BillingMeterAmountPerGB}\\r\\n| extend DataIngestCostWithP2 = todecimal(todecimal(BillableDataInGBAfterBenefit) * {BillingMeterAmountPerGB})\\r\\n| order by TotalBillableDataBytes desc\\r\\n//| project ['Table Name'], ['Billable Data MB Before Benefit'] = round(BillableDataInMBBeforeBenefit,2), ['Billable Data MB After Benefit'] = BillableDataInMBAfterBenefit,['Ingestion Cost w/o P2'] = DataIngestionCostWithoutP2, ['Ingestion Cost w/ P2'] = DataIngestCostWithP2;\\r\\n| project ['Billable Data MB Before Benefit'] = round(BillableDataInMBBeforeBenefit,2), ['Billable Data MB After Benefit'] = BillableDataInMBAfterBenefit,['Ingestion Cost w/o P2'] = DataIngestionCostWithoutP2, ['Ingestion Cost w/ P2'] = DataIngestCostWithP2;\\r\\nunion (AllSourcesQuery | where {IncludeAllSources:value} == true)\\r\\n    ,(NotAllSourcesQuery | where {IncludeAllSources:value} != true)\",\"size\":1,\"showAnalytics\":true,\"title\":\"Ingestion by Table with Ingestion Benefits - SecurityAlert, SecurityBaseline, SecurityBaselineSummary, SecurityDetection, SecurityEvent, WindowsFirewall, ProtectionStatus, and MDCFileIntegrityMonitoringEvents\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"exportFieldName\":\"Table Name\",\"exportParameterName\":\"Table\",\"exportDefaultValue\":\"All Tables\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticsWorkspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Ingestion Cost w/o P2\",\"formatter\":3,\"formatOptions\":{\"palette\":\"blue\"},\"numberFormat\":{\"unit\":0,\"options\":{\"currency\":\"USD\",\"style\":\"currency\",\"useGrouping\":true,\"minimumIntegerDigits\":1,\"minimumFractionDigits\":2,\"maximumFractionDigits\":4,\"minimumSignificantDigits\":2},\"emptyValCustomText\":\"0\"}},{\"columnMatch\":\"Ingestion Cost w/ P2\",\"formatter\":3,\"formatOptions\":{\"palette\":\"blue\"},\"numberFormat\":{\"unit\":0,\"options\":{\"currency\":\"USD\",\"style\":\"currency\",\"useGrouping\":true,\"minimumIntegerDigits\":1,\"minimumFractionDigits\":2,\"maximumFractionDigits\":4,\"minimumSignificantDigits\":2},\"emptyValCustomText\":\"0\"}},{\"columnMatch\":\"Billable Data in MB Before Benefit\",\"formatter\":3,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"Billable Data in MB After Benefit\",\"formatter\":3,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"Billable Data in Bytes\",\"formatter\":3,\"formatOptions\":{\"palette\":\"lightBlue\"}},{\"columnMatch\":\"Table Entries\",\"formatter\":3,\"formatOptions\":{\"min\":0,\"palette\":\"green\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Table Size\",\"formatter\":3,\"formatOptions\":{\"min\":0,\"palette\":\"blue\"},\"numberFormat\":{\"unit\":2,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Size per Entry\",\"formatter\":3,\"formatOptions\":{\"min\":0,\"palette\":\"orange\"},\"numberFormat\":{\"unit\":2,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2}}}],\"filter\":true}},\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union withsource=table *\\r\\n| where _IsBillable == true\\r\\n| extend resourceSubId = extract(@\\\"/subscriptions/(.*?)/\\\", 1,_ResourceId)\\r\\n| where resourceSubId in ({DefenderSubscription:subId})\\r\\n| summarize BillableDataBytes = sum(_BilledSize) by _ResourceId\\r\\n| extend ResourceName = tostring(split(_ResourceId, \\\"/\\\")[8])\\r\\n| extend ResourceProvider = tostring(split(_ResourceId, \\\"/\\\")[6])\\r\\n| extend ResourceType = tostring(split(_ResourceId, \\\"/\\\")[7])\\r\\n| extend ResourceGroup = tostring(split(_ResourceId, \\\"/\\\")[4])\\r\\n| summarize BillableDataBytes = sum(BillableDataBytes) by ResourceGroup\\r\\n| extend DataIngestedInGB = round(BillableDataBytes / 1024 / 1024 / 1024, 2)\\r\\n| extend DataIngestionCosts = strcat(\\\"$\\\", round(DataIngestedInGB * {BillingMeterAmountPerGB}, 2))\\r\\n| project-away BillableDataBytes\\r\\n| sort by DataIngestedInGB desc\",\"size\":1,\"title\":\"Ingestion Costs by Resource Group\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticsWorkspace}\"],\"gridSettings\":{\"sortBy\":[{\"itemKey\":\"DataIngestedInGB\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"DataIngestedInGB\",\"sortOrder\":2}]},\"name\":\"query - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union withsource = tt *\\r\\n| extend resourceSubId = extract(@\\\"/subscriptions/(.*?)/\\\", 1,_ResourceId)\\r\\n| where resourceSubId in ({DefenderSubscription:subId})\\r\\n| where _IsBillable == true \\r\\n| summarize BillableDataBytes = sum(_BilledSize) by _ResourceId\\r\\n| extend ResourceName = tostring(split(_ResourceId, \\\"/\\\")[8])\\r\\n| extend ResourceProvider = tostring(split(_ResourceId, \\\"/\\\")[6])\\r\\n| extend ResourceType = tostring(split(_ResourceId, \\\"/\\\")[7])\\r\\n| extend ResourceGroup = tostring(split(_ResourceId, \\\"/\\\")[4])\\r\\n| summarize BillableDataBytes = sum(BillableDataBytes) by ResourceName, ResourceProvider, ResourceType, ResourceGroup\\r\\n| extend DataIngestedInGB = round(BillableDataBytes / 1000 / 1000 / 1000, 2)\\r\\n| extend DataIngestionCosts = strcat(\\\"$\\\", round(DataIngestedInGB * 2.28, 2))\\r\\n| project-away BillableDataBytes\\r\\n| sort by DataIngestedInGB desc\",\"size\":1,\"title\":\"Ingestion Costs by Resource\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticsWorkspace}\"]},\"name\":\"query - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union withsource = tt *\\r\\n| extend resourceSubId = extract(@\\\"/subscriptions/(.*?)/\\\", 1,_ResourceId)\\r\\n| where resourceSubId in ({DefenderSubscription:subId})\\r\\n| where _IsBillable == true \\r\\n| summarize BillableDataBytes = sum(_BilledSize) by _ResourceId, Type\\r\\n| extend ResourceName = tostring(split(_ResourceId, \\\"/\\\")[8])\\r\\n| extend ResourceProvider = tostring(split(_ResourceId, \\\"/\\\")[6])\\r\\n| extend ResourceType = tostring(split(_ResourceId, \\\"/\\\")[7])\\r\\n| extend ResourceGroup = tostring(split(_ResourceId, \\\"/\\\")[4])\\r\\n| summarize BillableDataBytes = sum(BillableDataBytes) by ResourceName, ResourceProvider, ResourceType, ResourceGroup, Type\\r\\n| extend DataIngestedInGB = round(BillableDataBytes / 1000 / 1000 / 1000, 2)\\r\\n| extend DataIngestionCosts = strcat(\\\"$\\\", round(DataIngestedInGB * 2.28, 2))\\r\\n| project-away BillableDataBytes\\r\\n| sort by DataIngestedInGB desc\",\"size\":1,\"title\":\"Ingestion Costs by Resource Name and Log Type\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticsWorkspace}\"]},\"name\":\"query - 7\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"loadType\":\"always\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union withsource=['Table Name'] *\\r\\n| extend resourceSubId = extract(@\\\"/subscriptions/(.*?)/\\\", 1,_ResourceId)\\r\\n| where resourceSubId in ({DefenderSubscription:subId})\\r\\n| where '{Table}' == 'All Tables' or ['Table Name'] == '{Table}'\\r\\n| make-series TableSize = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\\r\\n| mvexpand TableSize to typeof(real), TimeGenerated to typeof(datetime) limit 1000\\r\\n| project TimeGenerated, ['{Table}'] = TableSize\",\"size\":0,\"showAnalytics\":true,\"title\":\"Sum of Logs Ingested Over Time by Data Unit\",\"color\":\"green\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"exportFieldName\":\"Namespace\",\"exportParameterName\":\"Namespace\",\"exportDefaultValue\":\"All\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticsWorkspace}\"],\"visualization\":\"areachart\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Table Entries\",\"formatter\":3,\"formatOptions\":{\"min\":0,\"palette\":\"green\",\"showIcon\":true},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Table Size\",\"formatter\":3,\"formatOptions\":{\"min\":0,\"palette\":\"blue\",\"showIcon\":true},\"numberFormat\":{\"unit\":2,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Table Size Trend\",\"formatter\":9,\"formatOptions\":{\"min\":0,\"palette\":\"blue\",\"showIcon\":true}}],\"filter\":true},\"chartSettings\":{\"xSettings\":{\"numberFormatSettings\":{\"unit\":3,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}},\"label\":\"Units\"}}},\"customWidth\":\"50\",\"name\":\"query - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union withsource=['Table Name'] *\\r\\n| extend resourceSubId = extract(@\\\"/subscriptions/(.*?)/\\\", 1,_ResourceId)\\r\\n| where resourceSubId in ({DefenderSubscription:subId})\\r\\n| where '{Table}' == 'All Tables' or ['Table Name'] == '{Table}'\\r\\n| make-series TableSize = sum(estimate_data_size(*)) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} \\r\\n| mvexpand TableSize to typeof(real), TimeGenerated to typeof(datetime) limit 1000\\r\\n| project TimeGenerated, ['{Table}'] = TableSize\",\"size\":0,\"showAnalytics\":true,\"title\":\"Sum of Logs Ingested Over Time by Count\",\"color\":\"blue\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"exportFieldName\":\"Namespace\",\"exportParameterName\":\"Namespace\",\"exportDefaultValue\":\"All\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticsWorkspace}\"],\"visualization\":\"areachart\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Table Entries\",\"formatter\":3,\"formatOptions\":{\"min\":0,\"palette\":\"green\",\"showIcon\":true},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Table Size\",\"formatter\":3,\"formatOptions\":{\"min\":0,\"palette\":\"blue\",\"showIcon\":true},\"numberFormat\":{\"unit\":2,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Table Size Trend\",\"formatter\":9,\"formatOptions\":{\"min\":0,\"palette\":\"blue\",\"showIcon\":true}}],\"filter\":true},\"chartSettings\":{\"xSettings\":{\"numberFormatSettings\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}},\"label\":\"Count\"}}},\"customWidth\":\"50\",\"name\":\"query - 7\"}]},\"name\":\"group - 8\",\"styleSettings\":{\"margin\":\"0\"}}],\"isLocked\":false,\"fallbackResourceIds\":[\"Azure Monitor\"]}",
                "version": "1.0",
                "sourceId": "[parameters('workbookSourceId')]",
                "category": "[parameters('workbookType')]"
            }
        }
    ],
    "outputs": {
        "workbookId": {
            "type": "string",
            "value": "[resourceId( 'microsoft.insights/workbooks', parameters('workbookId'))]"
        }
    },
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
}